int value = 0;
int scl = 3;
int rows, cols;
float[][] noiseMap;
float xOff = 0, yOff = 0;
float xNoise = 0, yNoise = 0;
float inc = 0.05;

void setup() {
  size(700, 700);

  calcMap();
}

void keyPressed() {
  if (key == 'w') {
    yNoise -= 0.1;
  } else if (key == 'a') {
    xNoise -= 0.1;
  } else if (key == 's') {
    yNoise += 0.1;
  } else if (key == 'd') {
    xNoise += 0.1;
  }
  calcMap();
  print(xOff);
}

void draw() {
  background(30);
  translate(scl, scl);
  calcMap();
  for (int i = 0; i < cols; i++) {
    for (int j = 0; j < rows; j++) {
      fill(getColour(noiseMap[i][j]));
      stroke(getColour(noiseMap[i][j]));
      rect(i * scl, j * scl,scl,scl);
    }
  }
}


void calcMap() {
  rows = width / scl;
  cols = height / scl;
  noiseMap = new float [cols][rows];
  //scl += 1;
  float xOff = xNoise;
  for (int i = 0; i < cols; i++) {
    float yOff = yNoise;
    for (int j = 0; j < rows; j++) {
      noiseMap[i][j] = noise(xOff, yOff);
      yOff += inc;
    }
    xOff += inc;
  }
}

color getColour(float val) {
  if (val < 0.4) {
    return color(#00A8FF); //water
  } else if (val < 0.5) {
    return color(#FFE200); //sand
  } else if (val < 0.6) {
    return color(#00FF57); //grass
  } else {
    return color(#167436); //trees
  }
}
